#+TITLE: Clojure App Skeleton, using Org literate programming
#+AUTHOR: Kai Wu
#+EMAIL: k@limist.com
#+LANGUAGE: en
#+STARTUP: align overview indent fold nodlcheck hidestars oddeven lognotestate
#+PROPERTY: mkdirp yes


* Meta: this file, Clojure + Org → LP, etc.
You're looking at a literate programming (LP) file, specifically an
[[http://orgmode.org][Org mode]] formatted file combining both documentation (Org's structured
markup) and code blocks (Clojure code).

For best results please *use Emacs 24.3 or later to view this* =.org=
*file*. If you're looking at this on Github.com, STOP - the rendering
there is neither complete nor correct!

** The *benefits* of LP using Emacs + Org
1. Docs matter, a lot. With LP, documentation is integral to
   development, never an afterthought.
   - For all but small throwaway systems, you're likely keeping a
     separate file of development notes already; LP would integrate
     that.
2. With one LP file, avoid the incidental/inessential complexity of
   the filesystem: avoid context-switch overhead moving between files,
   and sidestep your language's imposed filesystem structure.
3. Org rocks for prose:
   - Org's plain-text *markup is lightweight*, yet more powerful than
     Markdown, and cleaner than rST.
   - The *structural editing* provided by Org documents lets you
     organize your thoughts/writing/code very quickly.  With good
     structure even major revisions are easy.
   - Org's exporter lets your *write-once, express-many-times*: you
     can export an Org file to HTML (e.g. for blogging) or LaTeX
     (for serious publishing).
   - It's easy to version-control Org files.
4. Org rocks for code:
   - Each code block has flexible granularity: can be named and
     referred to; evaluated or not; have data sent in or exported;
     specify different REPL sessions; specify different target/tangled
     files.
   - Code blocks are syntax-highlighted.
   - Code blocks are ready to edit: jump to major-mode editing easily.
   - A single Org file can mix different languages.
5. Meta-development, manage complexity from a coherent perspective: a
   unified, single-file approach encourages holistic software
   development and exposition, in a natural order, using structure to
   enhance understanding.  LP is not just documentation and code
   together: it's a *process and abstraction unifying the development
   lifecycle*: requirements, architecture, design, code, tests,
   deployment, and maintenance - can all be bound coherently in one
   active format.


* Using this file
** Prerequisites
1. A recent version of Emacs, 24.3+.
2. Both org-mode (included w/ Emacs 24) and =clojure-mode= installed;
   use Emacs ELPA as needed.
   - Consider using an Emacs "starter package" that provides a good
     baseline, like [[http://batsov.com/prelude/][Emacs Prelude]] or [[http://overtone.github.io/emacs-live/][Emacs Live]].

Then if you start Emacs and load this file, you'll see it the way it's
meant to be seen: as a multi-level, hierarchically organized and
structured literate code file, w/ syntax-highlighted code blocks.  

** Weaving and tangling
To use the original Knuth terminology, this single file can be /woven/
into documentation, or /tangled/ to code.

*** Weave/export, to documentation
+ To /weave/: the Org equivalent of /weaving/ is to export this file,
  typically to HTML or LaTeX/PDF. The keystroke is =C-c-e= i.e. hold
  down the Control key while pressing "c" then "e" to view the export
  options.
  - e.g. export this file to HTML with =CTRL-c-e h= or, to see it
    immediately in a browser window, =CTRL-c-e b=.
+ You don't have to export this file though; if/when you're comfy in
  Emacs, the Org format itself is great.

*** Tangle, to code
+ To /tangle/: in Org, it's the same word/term. =C-c-v-t= will cause
  all designated code blocks in this file to appear in the filesystem.
  Here, the code blocks go to files and directories matching a new
  Clojure app, as would be produced by =lein new app
  the-project-name=.

** Other coolness
- =SHIFT-TAB= will *cycle* the display: top-level headings only, all
  headings, or fully-expanded.
- Within a code block, =CTRL-c= ='= will open a buffer to edit the
  code. For full power, be sure =clojure-mode=, =paredit=, and
  =nrepl= are installed.
- Org docs: see [[http://orgmode.org/org.html][main documentation]], especially sections on [[http://orgmode.org/org.html#Document-Structure][structure]],
  [[http://orgmode.org/org.html#Hyperlinks][links]], [[http://orgmode.org/org.html#Markup][markup]], and [[http://orgmode.org/org.html#Working-With-Source-Code][literate programming]] features.


* Project meta
** Project definition
#+BEGIN_SRC clojure :tangle project.clj
(defproject skeleton-app "0.1.0-SNAPSHOT"
  :description "FIXME: write description"
  :url "http://example.com/FIXME"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies [[org.clojure/clojure "1.5.1"]]
  :main skeleton-app.core
  :profiles {:uberjar {:aot :all}})
#+END_SRC

** The README
It would be nice to auto-generate the README.md from selected parts of
this =org= file; TBD how.

#+BEGIN_SRC markdown :tangle README.md
# skeleton-app

FIXME: description

## Installation

Download from http://example.com/FIXME.

## Usage

FIXME: explanation

    $ java -jar skeleton-app-0.1.0-standalone.jar [args]

## Options

FIXME: listing of options this app accepts.

## Examples

...

### Bugs

...

### Any Other Sections
### That You Think
### Might be Useful

## License

Copyright © 2013 FIXME

Distributed under the Eclipse Public License either version 1.0 or (at
your option) any later version.
#+END_SRC

** License notice
#+BEGIN_SRC text :tangle LICENSE
THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC
LICENSE ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM
CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.

1. DEFINITIONS

"Contribution" means:

a) in the case of the initial Contributor, the initial code and
documentation distributed under this Agreement, and

b) in the case of each subsequent Contributor:

i) changes to the Program, and

ii) additions to the Program;

where such changes and/or additions to the Program originate from and are
distributed by that particular Contributor. A Contribution 'originates' from
a Contributor if it was added to the Program by such Contributor itself or
anyone acting on such Contributor's behalf. Contributions do not include
additions to the Program which: (i) are separate modules of software
distributed in conjunction with the Program under their own license
agreement, and (ii) are not derivative works of the Program.

"Contributor" means any person or entity that distributes the Program.

"Licensed Patents" mean patent claims licensable by a Contributor which are
necessarily infringed by the use or sale of its Contribution alone or when
combined with the Program.

"Program" means the Contributions distributed in accordance with this
Agreement.

"Recipient" means anyone who receives the Program under this Agreement,
including all Contributors.

2. GRANT OF RIGHTS

a) Subject to the terms of this Agreement, each Contributor hereby grants
Recipient a non-exclusive, worldwide, royalty-free copyright license to
reproduce, prepare derivative works of, publicly display, publicly perform,
distribute and sublicense the Contribution of such Contributor, if any, and
such derivative works, in source code and object code form.

b) Subject to the terms of this Agreement, each Contributor hereby grants
Recipient a non-exclusive, worldwide, royalty-free patent license under
Licensed Patents to make, use, sell, offer to sell, import and otherwise
transfer the Contribution of such Contributor, if any, in source code and
object code form.  This patent license shall apply to the combination of the
Contribution and the Program if, at the time the Contribution is added by the
Contributor, such addition of the Contribution causes such combination to be
covered by the Licensed Patents. The patent license shall not apply to any
other combinations which include the Contribution. No hardware per se is
licensed hereunder.

c) Recipient understands that although each Contributor grants the licenses
to its Contributions set forth herein, no assurances are provided by any
Contributor that the Program does not infringe the patent or other
intellectual property rights of any other entity. Each Contributor disclaims
any liability to Recipient for claims brought by any other entity based on
infringement of intellectual property rights or otherwise. As a condition to
exercising the rights and licenses granted hereunder, each Recipient hereby
assumes sole responsibility to secure any other intellectual property rights
needed, if any. For example, if a third party patent license is required to
allow Recipient to distribute the Program, it is Recipient's responsibility
to acquire that license before distributing the Program.

d) Each Contributor represents that to its knowledge it has sufficient
copyright rights in its Contribution, if any, to grant the copyright license
set forth in this Agreement.

3. REQUIREMENTS

A Contributor may choose to distribute the Program in object code form under
its own license agreement, provided that:

a) it complies with the terms and conditions of this Agreement; and

b) its license agreement:

i) effectively disclaims on behalf of all Contributors all warranties and
conditions, express and implied, including warranties or conditions of title
and non-infringement, and implied warranties or conditions of merchantability
and fitness for a particular purpose;

ii) effectively excludes on behalf of all Contributors all liability for
damages, including direct, indirect, special, incidental and consequential
damages, such as lost profits;

iii) states that any provisions which differ from this Agreement are offered
by that Contributor alone and not by any other party; and

iv) states that source code for the Program is available from such
Contributor, and informs licensees how to obtain it in a reasonable manner on
or through a medium customarily used for software exchange.

When the Program is made available in source code form:

a) it must be made available under this Agreement; and

b) a copy of this Agreement must be included with each copy of the Program.

Contributors may not remove or alter any copyright notices contained within
the Program.

Each Contributor must identify itself as the originator of its Contribution,
if any, in a manner that reasonably allows subsequent Recipients to identify
the originator of the Contribution.

4. COMMERCIAL DISTRIBUTION

Commercial distributors of software may accept certain responsibilities with
respect to end users, business partners and the like. While this license is
intended to facilitate the commercial use of the Program, the Contributor who
includes the Program in a commercial product offering should do so in a
manner which does not create potential liability for other Contributors.
Therefore, if a Contributor includes the Program in a commercial product
offering, such Contributor ("Commercial Contributor") hereby agrees to defend
and indemnify every other Contributor ("Indemnified Contributor") against any
losses, damages and costs (collectively "Losses") arising from claims,
lawsuits and other legal actions brought by a third party against the
Indemnified Contributor to the extent caused by the acts or omissions of such
Commercial Contributor in connection with its distribution of the Program in
a commercial product offering.  The obligations in this section do not apply
to any claims or Losses relating to any actual or alleged intellectual
property infringement. In order to qualify, an Indemnified Contributor must:
a) promptly notify the Commercial Contributor in writing of such claim, and
b) allow the Commercial Contributor tocontrol, and cooperate with the
Commercial Contributor in, the defense and any related settlement
negotiations. The Indemnified Contributor may participate in any such claim
at its own expense.

For example, a Contributor might include the Program in a commercial product
offering, Product X. That Contributor is then a Commercial Contributor. If
that Commercial Contributor then makes performance claims, or offers
warranties related to Product X, those performance claims and warranties are
such Commercial Contributor's responsibility alone. Under this section, the
Commercial Contributor would have to defend claims against the other
Contributors related to those performance claims and warranties, and if a
court requires any other Contributor to pay any damages as a result, the
Commercial Contributor must pay those damages.

5. NO WARRANTY

EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON
AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER
EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR
CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the
appropriateness of using and distributing the Program and assumes all risks
associated with its exercise of rights under this Agreement , including but
not limited to the risks and costs of program errors, compliance with
applicable laws, damage to or loss of data, programs or equipment, and
unavailability or interruption of operations.

6. DISCLAIMER OF LIABILITY

EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY
CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION
LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY
OF SUCH DAMAGES.

7. GENERAL

If any provision of this Agreement is invalid or unenforceable under
applicable law, it shall not affect the validity or enforceability of the
remainder of the terms of this Agreement, and without further action by the
parties hereto, such provision shall be reformed to the minimum extent
necessary to make such provision valid and enforceable.

If Recipient institutes patent litigation against any entity (including a
cross-claim or counterclaim in a lawsuit) alleging that the Program itself
(excluding combinations of the Program with other software or hardware)
infringes such Recipient's patent(s), then such Recipient's rights granted
under Section 2(b) shall terminate as of the date such litigation is filed.

All Recipient's rights under this Agreement shall terminate if it fails to
comply with any of the material terms or conditions of this Agreement and
does not cure such failure in a reasonable period of time after becoming
aware of such noncompliance. If all Recipient's rights under this Agreement
terminate, Recipient agrees to cease use and distribution of the Program as
soon as reasonably practicable. However, Recipient's obligations under this
Agreement and any licenses granted by Recipient relating to the Program shall
continue and survive.

Everyone is permitted to copy and distribute copies of this Agreement, but in
order to avoid inconsistency the Agreement is copyrighted and may only be
modified in the following manner. The Agreement Steward reserves the right to
publish new versions (including revisions) of this Agreement from time to
time. No one other than the Agreement Steward has the right to modify this
Agreement. The Eclipse Foundation is the initial Agreement Steward. The
Eclipse Foundation may assign the responsibility to serve as the Agreement
Steward to a suitable separate entity. Each new version of the Agreement will
be given a distinguishing version number. The Program (including
Contributions) may always be distributed subject to the version of the
Agreement under which it was received. In addition, after a new version of
the Agreement is published, Contributor may elect to distribute the Program
(including its Contributions) under the new version. Except as expressly
stated in Sections 2(a) and 2(b) above, Recipient receives no rights or
licenses to the intellectual property of any Contributor under this
Agreement, whether expressly, by implication, estoppel or otherwise. All
rights in the Program not expressly granted under this Agreement are
reserved.

This Agreement is governed by the laws of the State of Washington and the
intellectual property laws of the United States of America. No party to this
Agreement will bring a legal action under this Agreement more than one year
after the cause of action arose. Each party waives its rights to a jury trial
in any resulting litigation.
#+END_SRC


* Requirements
** The user-story
Max touches the GO button using this app, and justly rebuilds the
world with Clojure.
** Non-user-visible requirements
1. Logging
2. Security


* Architecture
1. Foo back-end
2. Bar front-end
   - Probably use a Pedestal App client


| Part | Description                 | Alternatives  |
|------+-----------------------------+---------------|
| Foo  | Foo has the data we worship |               |
| Bar  | Bar presents via D3 charts  | Flash? Nein!! |
|      |                             |               |


* Design
** Foo design
** Bar design


* Source-code
The default =lein new app *= command just produces two files with
actual Clojure code.

** core
#+NAME: core
#+BEGIN_SRC clojure :tangle src/skeleton_app/core.clj
(ns skeleton-app.core
  (:gen-class))

(defn -main
  "I don't do a whole lot ... yet."
  [& args]
  (println "Hello, World!"))

#+END_SRC

*** Tests
#+BEGIN_SRC clojure :tangle test/skeleton_app/core_test.clj
(ns skeleton-app.core-test
  (:require [clojure.test :refer :all]
            [skeleton-app.core :refer :all]))

(deftest a-test
  (testing "FIXME, I fail."
    (is (= 0 1))))

#+END_SRC
